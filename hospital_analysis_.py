# -*- coding: utf-8 -*-
"""Hospital analysis .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sJfYXh-kd6oLjGHOX4gz1PQPquJO-9ip

# build week 1 - hospital patient data set

team members :-
* Yash                  - Cleaning
* Bhumika (Team lead)   - EDA
* Vaali nandhan         - Insight Visualisation
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv("HospInfo.csv")
df.head()

df.info()

df.isnull().sum()

""" The Hospital Dataset consists these following columns:-

1. Provider ID: Unique identification number for each hospital.

2. Hospital Name: Official name of the hospital.

3. Address: Street address of the hospital.

4. City: City where the hospital is located.

5. 5State: U.S. state where the hospital is situated (e.g., AL, TX).

6. ZIP Code: Postal code of the hospital’s location.

7. County Name: Name of the county where the hospital is located.

8. Phone Number: Contact number of the hospital.

Hospital Classification & Services:-

9. Hospital Type: Type of facility (e.g., Acute Care Hospitals, Critical        Access).

10. Hospital Ownership: Ownership category (e.g., Government, Proprietary).


11. Emergency Services: Indicates whether emergency services are available (True or False).

12. Meets criteria for meaningful use of EHRs: Whether hospital uses certified Electronic Health Records

Ratings and Performance:-

13. Hospital overall rating: Overall hospital rating on a scale from 1 to 5. May be NaN if data is not available.

National Comparison Metrics:-

14. Mortality: Mortality rate compared to national average (Above, Same as, Below, Not Available).

15. Safety: Safety of care comparison (Above, Same as, Below, Not Available).

16. Readmission: Readmission rate comparison.

17. Experience: Patient experience comparison.

18. Effectiveness: Effectiveness of care comparison.

19. Timeliness: Timeliness of care comparison.

20. Efficiency: Efficient use of medical imaging comparison.





"""

print("skewness")
df.skew(numeric_only=True)

print("kurtosis")
df.kurt(numeric_only=True)

#data cleaning and processing
def clean_data(data):
    """
    Handling duplicate values in the dataset.

    """
    # Duplicate value treatment
    print(f"Duplicate values found: {data.duplicated().sum()}")
    data = data.drop_duplicates()
    print(f"Duplicates removed. Remaining rows: {len(data)}")

    return data

df = clean_data(df)

# For columns with footnotes that are mostly missing, we might drop them
footnote_cols = [col for col in df.columns if 'footnote' in col.lower()]
df = df.drop(columns=footnote_cols)
# For other missing values in rating columns, we might replace with 'Not Available'
rating_cols = [col for col in df.columns if 'rating' in col.lower() or 'comparison' in col.lower()]
for col in rating_cols:
    df[col] = df[col].fillna('Not Available')

#Cleaning Text Fields
# Clean address fields that have newlines
df['Address'] = df['Address'].str.replace('\n', ' ')
df['Location'] = df['Location'].str.replace('\n', ' ')

# Clean phone numbers to consistent format
df['Phone Number'] = df['Phone Number'].astype(str).str.replace(r'\D', '')

# Clean hospital names (remove extra spaces)
df['Hospital Name'] = df['Hospital Name'].str.strip()

#Replacing 'Not Available' with NaN
df.replace("Not Available", pd.NA, inplace=True)

#Cleaning Specific Columns
# Clean ZIP Code (some have 4 digits, some have 5)
df['ZIP Code'] = df['ZIP Code'].astype(str).str.zfill(5)

# Clean Hospital Type and Ownership
df['Hospital Type'] = df['Hospital Type'].str.title()
df['Hospital Ownership'] = df['Hospital Ownership'].str.title()

# Clean rating columns (convert to numeric)
df['Hospital overall rating'] = pd.to_numeric(df['Hospital overall rating'], errors='coerce')


"""                                      EDA

"""

# 1. Hospital Types Distribution
df['Hospital Type'].value_counts()

#Graph of Distribution of Hospital Types
plt.figure(figsize=(10,6))
sns.countplot(data=df, y='Hospital Type', order=df['Hospital Type'].value_counts().index)
plt.title("Distribution of Hospital Types")
plt.xlabel("Number of Hospitals")
plt.ylabel("Hospital Type")
plt.tight_layout()
plt.show()

# 2. Ownership Distribution
df['Hospital Ownership'].value_counts()

#Graph of Distribution of Hospital Ownership
plt.figure(figsize=(10,6))
sns.countplot(data=df, y='Hospital Ownership', order=df['Hospital Ownership'].value_counts().index)
plt.title("Distribution of Hospital Ownership")
plt.xlabel("Number of Hospitals")
plt.ylabel("Ownership Type")
plt.tight_layout()
plt.show()

# 3. Hospital Overall Ratings Distribution
df['Hospital overall rating'].value_counts().sort_index()

#Graph of Distribution of Hospital Overall Ratings
plt.figure(figsize=(8,6))
sns.histplot(df['Hospital overall rating'].dropna(), bins=5, kde=True)
plt.title("Hospital Overall Ratings Distribution")
plt.xlabel("Rating (1 to 5)")
plt.ylabel("Number of Hospitals")
plt.tight_layout()
plt.show()

# 4. Emergency Services Availability by State
df[df['Emergency Services'] == True]['State'].value_counts()

#Graph of Emergency Services by State
plt.figure(figsize=(14,8))
sns.countplot(data=df[df["Emergency Services"] == True], y='State', order=df['State'].value_counts().index)
plt.title("Hospitals with Emergency Services by State")
plt.xlabel("Number of Hospitals with Emergency")
plt.ylabel("State")
plt.tight_layout()
plt.show()

# 5. Hospital Ratings by Ownership Type
df.groupby('Hospital Ownership')['Hospital overall rating'].describe()

# Graph of Ratings by Hospital Ownership
plt.figure(figsize=(10,6))
sns.boxplot(data=df, x='Hospital overall rating', y='Hospital Ownership')
plt.title("Hospital Ratings by Ownership Type")
plt.xlabel("Overall Rating")
plt.ylabel("Ownership")
plt.tight_layout()
plt.show()

# 6. Hospitals by State
df['State'].value_counts()

#Graph of Hospitals per State (All)
plt.figure(figsize=(14,8))
sns.countplot(data=df, y='State', order=df['State'].value_counts().index)
plt.title("Total Number of Hospitals by State")
plt.xlabel("Number of Hospitals")
plt.ylabel("State")
plt.tight_layout()
plt.show()

# 7. Patient Experience National Comparison
df['Patient experience national comparison'].value_counts()

#Graph of Patient Experience National Comparison
plt.figure(figsize=(10,6))
sns.countplot(data=df, x='Patient experience national comparison', order=df['Patient experience national comparison'].value_counts().index)
plt.title("Patient Experience Compared to National Average")
plt.xlabel("Comparison Category")
plt.ylabel("Number of Hospitals")
plt.xticks(rotation=30)
plt.tight_layout()
plt.show()

"""INSIGHT VISUALISATION

1. Hospital Type Dominance

Most hospitals are Acute Care Hospitals, which shows the healthcare system is focused on short-term treatment and urgent care.

2. Ownership Trends

Proprietary hospitals are fewer compared to Non-Profit or Government-run ones.
Government-run hospitals are dominant in rural counties.

3. Performance & Ratings

Ratings cluster around 3 stars, meaning majority hospitals offer average service.
However, non-profit hospitals show higher median ratings in boxplot analysis.

4. Emergency Services Disparity

Some states (e.g., Texas, California) have very high numbers of emergency-equipped hospitals.

States like Alaska or Vermont have very few, suggesting potential care access gaps.

5. Patient Experience

Most hospitals are rated “Same as the national average”, but few states show a concentration of hospitals “Above average”, which could indicate regional quality clusters.

6. Mortality and Readmission

Higher mortality rates are often associated with hospitals “Below national average” performance in ratings.

Readmission is a mixed pattern but tends to be better in highly rated hospitals.

7. Outliers

A few hospitals have ratings of 1 or 5, which deserve further individual exploration.

Hospitals with no patient experience or mortality data likely represent newer or specialized facilities.
"""
